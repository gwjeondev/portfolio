{"version":3,"sources":["Component/Header.js","Component/Mainform.js","Component/About.js","Component/Skills.js","Component/Projects.js","Component/Contact.js","Component/Container.js","Component/GlobalStyles.js","App.js","serviceWorker.js","index.js"],"names":["Header","useState","toggle","setToggle","id","title","menu","className","map","key","activeClass","to","spy","smooth","duration","onClick","Mainform","avgTypingDelay","Delay","ms","About","img","blog","text","flex","info","src","alt","value","href","target","Skills","level","skillset","skill","Projects","url","image","uselang","projectintro","projectSet","project","Contact","Container","name","globalStyles","createGlobalStyle","reset","App","GlobalStyles","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f2b97496.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../css/header.css\";\r\nimport \"../css/Tablet/tablet_header.css\";\r\nimport { GiHamburgerMenu } from \"react-icons/gi\";\r\nimport {\r\n  Link,\r\n  Element,\r\n  Events,\r\n  animateScroll as scroll,\r\n  scrollSpy,\r\n  scroller\r\n} from \"react-scroll\";\r\n\r\nconst Header = () => {\r\n\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  const onClick = () => {\r\n    toggle ? setToggle(false) : setToggle(true);\r\n  }\r\n  const [menu, setMenu] = useState([\r\n    {\r\n      id: 1,\r\n      title: \"Home\"\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"About\"\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Skills\"\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Projects\"\r\n    },\r\n    {\r\n      id: 5,\r\n      title: \"Contact\"\r\n    }\r\n  ]);\r\n  return (\r\n    <header className=\"header\">\r\n      <div className={`header__container ${toggle ? '' : 'toggle'}`}>\r\n        <ul className=\"header__list\">\r\n          {menu.map(title => {\r\n            return (\r\n              <li\r\n                className={`header__list--${title.id} header--list`}\r\n                key={title.id}\r\n              >\r\n                <Link\r\n                  activeClass=\"active\"\r\n                  to={title.title}\r\n                  spy={true}\r\n                  smooth={true}\r\n                  duration={500}\r\n                >\r\n                  {title.title}\r\n                </Link>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n      <GiHamburgerMenu id=\"toggle-btn\" className={`${toggle ? '' : 'toggle'}`}onClick={onClick}/>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"../css/mainform.css\";\r\nimport \"../css/Tablet/tablet_mainform.css\";\r\nimport \"../css/Moblie/moblie_mainform.css\";\r\nimport Typist from 'react-typist';\r\nimport 'react-typist/dist/Typist.css';\r\n\r\nconst Mainform = ({title}) => {\r\n\r\n    return (\r\n    <div className=\"mainform\">\r\n      <div className=\"mainform__container\">\r\n        <div className=\"mainform__shadow\">\r\n          <span className=\"mainform__title\"><Typist avgTypingDelay = {150}>< Typist.Delay ms = { 500 } />{title}</Typist></span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Mainform;\r\n","import React, { useState } from \"react\";\r\nimport \"../css/about.css\";\r\nimport \"../css/Tablet/tablet_about.css\";\r\nimport \"../css/Moblie/moblie_about.css\";\r\n\r\nconst About = () => {\r\n  const [img, setImg] = useState(\r\n    \"https://raw.githubusercontent.com/won-developer/img/master/my_avatar.jpg\"\r\n  );\r\n  const [blog, setBlog] = useState(['https://github.com/won-developer', 'https://velog.io/@won-developer']);\r\n  const [info, setInfo] = useState([\r\n    {\r\n      id: 1,\r\n      text: \"전 근 원\",\r\n      flex: true\r\n    },\r\n    {\r\n      id: 2,\r\n      text: \"Front-end Developer\"\r\n    },\r\n    {\r\n      id: 3,\r\n      text: \"1994년 12월 17일\"\r\n    },\r\n    {\r\n      id: 4,\r\n      text: \"경상남도 거제시\"\r\n    },\r\n    {\r\n      id: 5,\r\n      text:\r\n        \" 저는 이러한 개발자가 되고 싶습니다. 어떻게 하면 사용자가 편리할지 \\\r\n      어떻게 하면 내가 속한 집단에 도움을 가져다 줄수 있을지, 어떻게 하면 \\\r\n      이 어플리케이션이 최고가 될지 끝 없이 생각하는 개발자가 되고 싶습니다.\\\r\n      덧붙여 제가 하고자 하는 일이 정말 너무나 재미있습니다. 내가 만든 프로그램이 동작하는 것이 \\\r\n      너무나 즐겁습니다. 앞으로 너무나도 많은 시행착오가 있겠지만 \\\r\n      모르는 것이 있다면 끝까지 학습하는 자세를 가지겠습니다. 최선을 다 하겠습니다.\"\r\n    }\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"about\">\r\n      <div className=\"about__container\">\r\n        <div className=\"about__title\">About</div>\r\n        <div className=\"about__info info\">\r\n          <div className=\"info__avatar\">\r\n            <img src={img} alt=\"avatar\" />\r\n          </div>\r\n          <div className=\"info__info\">\r\n            <ul className=\"info__list\">\r\n              {info.map(value => {\r\n                return value.flex ? (\r\n                  <li\r\n                    className={`info__list--${value.id} info--list`}\r\n                    key={value.id}\r\n                  >\r\n                    <span>{value.text}</span> \r\n                    <div>\r\n                        <div className=\"github\">\r\n                            <a href={blog[0]} target=\"_blank\">\r\n                                <div className=\"github__mark\"></div>\r\n                                </a>\r\n                        </div>\r\n                        <div className=\"blog\">\r\n                            <a href={blog[1]} target=\"_blank\">\r\n                                <div className=\"blog__mark\"></div>\r\n                                </a>\r\n                        </div>\r\n                    </div>\r\n                  </li>\r\n                ) : (\r\n                  <li\r\n                    className={`info__list--${value.id} info--list`}\r\n                    key={value.id}\r\n                  >\r\n                    {value.text}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;","import React, { useState } from \"react\";\r\nimport \"../css/skills.css\";\r\nimport \"../css/Tablet/tablet_skills.css\";\r\nimport \"../css/Moblie/moblie_skills.css\";\r\n\r\nconst Skills = () => {\r\n  const [skillset, setSkillset] = useState([\r\n    {\r\n      id: 1,\r\n      title: \"HTML\",\r\n      level: \"intermediate\"\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"CSS\",\r\n      level: \"intermediate\"\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"JavaScript\",\r\n      level: \"intermediate\"\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"React\",\r\n      level: \"basic\"\r\n    },\r\n    {\r\n      id: 5,\r\n      title: \"NodeJS\",\r\n      level: \"basic\"\r\n    },\r\n    {\r\n      id: 6,\r\n      title: \"MongoDB\",\r\n      level: \"basic\"\r\n    },\r\n    {\r\n      id: 7,\r\n      title: \"C\",\r\n      level: \"basic\"\r\n    },\r\n    {\r\n      id: 8,\r\n      title: \"SQL\",\r\n      level: \"basic\"\r\n    }\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"sks\">\r\n      <div className=\"sks__container\">\r\n        <div className=\"sks__title\">Skills</div>\r\n        <div className=\"sks__set\">\r\n          {skillset.map(skill => {\r\n            return (\r\n              <div className={`sks__${skill.title} sk`} key={skill.id}>\r\n                <div className=\"sk__hoverbox\"><span className=\"sk__level\">{skill.level}</span></div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","import React, { useState } from \"react\";\r\nimport \"../css/projects.css\";\r\nimport \"../css/Tablet/tablet_projects.css\";\r\nimport \"../css/Moblie/moblie_projects.css\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Projects = () => {\r\n  const [projectSet, setProjectSet] = useState([\r\n    {\r\n      id: 1,\r\n      title: \"Geunwon Board\",\r\n      url: \"https://my-first-board.herokuapp.com/\",\r\n      image:\r\n        \"https://raw.githubusercontent.com/won-developer/img/master/geunwonboard.png\",\r\n      uselang: \"Skills : Vanila JS, Node JS, Express, MongoDB, SCSS, Pug, Heroku\",\r\n      projectintro: \"프로젝트 소개\",\r\n      text: [\"- Naver를 살짝 카피한 게시판\",\"- Passport Local Login\", \"- 페이징\", \"- CkEditor\", \"- 게시글 검색, 업로드, 좋아요, 조회수\", \"- 댓글 & 답글\"]\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Youtube Cloneing\",\r\n      url: \"https://won-wetube.com\",\r\n      image:\r\n        \"https://raw.githubusercontent.com/won-developer/img/master/wetube.png\",\r\n      uselang: \"Skills: Vanila JS, Node JS, Express, MongoDB, SCSS, Pug, AWS\",\r\n      projectintro: \"프로젝트 소개\",\r\n      text: [\"- 유튜브 따라 만들기\", \"- Passport Local, Github, Naver, Kakao Login\", \"- 영상 검색, 업로드, 녹화, 수정, 좋아요, 조회수\",  \"- 프로필 관리\", \"- 댓글\", \"- 반응형 웹\"]\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Movie App\",\r\n      url: \"https://won-developer.github.io/first_react_movie_app/\",\r\n      image:\r\n        \"https://raw.githubusercontent.com/won-developer/img/master/movie_app_img.png\",\r\n      uselang: \"Skills: React\",\r\n      projectintro: \"프로젝트 소개\",\r\n      text: [\"- 영화 정보 API\", \"- React Hooks를 사용한 간단한 영화 소개\"]\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"TodoList\",\r\n      url: \"https://won-developer.github.io/mommentum-clone/\",\r\n      image:\r\n        \"https://raw.githubusercontent.com/won-developer/img/master/todolist_img.png\",\r\n      uselang: \"Skills: HTML, CSS, Vanila JS\",\r\n      projectintro: \"프로젝트 소개\",\r\n      text: [\"- 날씨 API\", \"- Local Storage에 목록 저장\", \"- 실시간 시간\"]\r\n    },\r\n    {\r\n      id: 5,\r\n      title: \"Github\",\r\n      url: \"https://won-developer.github.io/github-clone/\",\r\n      image:\r\n        \"https://raw.githubusercontent.com/won-developer/img/master/github_img.png\",\r\n      uselang: \"Skills: HTML, CSS, Vanila JS\",\r\n      projectintro: \"프로젝트 소개\",\r\n      text: [\"- Github 따라 만들기\", \"- 반응형 웹\"]\r\n    },\r\n    {\r\n      id: 6,\r\n      title: \"Kakao Talk\",\r\n      url: \"https://won-developer.github.io/kakao-clone/\",\r\n      image:\r\n        \"https://raw.githubusercontent.com/won-developer/img/master/kakao_img.png\",\r\n      uselang: \"Skills: HTML, CSS\",\r\n      projectintro: \"프로젝트 소개\",\r\n      text: [\"- Kakao Talk 따라 만들기\", \"- 모바일 화면에서만 적용\"]\r\n    },\r\n  ]);\r\n  return (\r\n    <div className=\"projects\">\r\n      <div className=\"projects__container\">\r\n        <div className=\"projects__title\">Projects</div>\r\n        {projectSet.map(project => {\r\n          return (\r\n            <div\r\n              className={`projects__list-${project.id} project`}\r\n              key={project.id}\r\n            >\r\n              <a className=\"project__link\" target=\"_blank\" href={project.url}>\r\n                <img\r\n                  className=\"project__img\"\r\n                  src={project.image}\r\n                  alt={`${project.title}_image`}\r\n                />\r\n              </a>\r\n              <div className=\"project__info\">\r\n                <h2>{project.title}</h2>\r\n                <h3>{project.projectintro}</h3>\r\n                {project.text.map(text => {\r\n                  return ( <span className=\"introlist\" key={text}>{text}</span> );\r\n                })}\r\n                <span className=\"uselang\">{project.uselang}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React, { useState } from \"react\";\r\nimport \"../css/contact.css\";\r\nimport \"../css/Tablet/tablet_contact.css\";\r\nimport \"../css/Moblie/moblie_contact.css\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <footer className=\"contact\">\r\n            <div className=\"contact__container\">\r\n                <div className=\"contact__title\">Contact</div>\r\n                <div className=\"contact__info\">\r\n                    <div className=\"contact__email\">gw4609@gmail.com</div>\r\n                    <div className=\"contact__cpyright\">Copyright ⓒ geunwon Jeon All right reserved.</div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Contact;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Mainfrom from \"./Mainform\";\r\nimport About from \"./About\";\r\nimport Skills from \"./Skills\";\r\nimport Projects from \"./Projects\";\r\nimport Contact from \"./Contact\";\r\nimport styled from \"styled-components\";\r\n\r\nimport {\r\n  Link,\r\n  Element,\r\n  Events,\r\n  animateScroll as scroll,\r\n  scrollSpy,\r\n  scroller\r\n} from \"react-scroll\";\r\n\r\nconst Container = () => {\r\n  return (\r\n    <>\r\n      <Element name=\"Home\">\r\n        <Header/>\r\n      </Element>\r\n      <div className=\"body__container\">\r\n        <Mainfrom title={'Front-end 개발자 전근원 입니다.'} />\r\n        <Element name=\"About\">\r\n          <About/>\r\n        </Element>\r\n        <Element name=\"Skills\">\r\n          <Skills/>\r\n        </Element>\r\n        <Element name=\"Projects\">\r\n          <Projects/>\r\n        </Element>\r\n        <Element name=\"Contact\">\r\n          <Contact/>\r\n        </Element>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from 'styled-reset';\r\n\r\nconst globalStyles = createGlobalStyle`\r\n${reset}\r\n@import url('https://fonts.googleapis.com/css?family=Noto+Sans+KR:400,700&display=swap');\r\n\r\n* {\r\n    box-sizing: border-box;\r\n}\r\n\r\na {\r\n    color: rgba(178, 190, 195,1.0);\r\n    text-decoration: none;\r\n}\r\nbody {\r\n    font-family: 'Noto Sans KR', sans-serif;\r\n}\r\n`;\r\n\r\nexport default globalStyles;","import React from \"react\";\nimport \"./App.css\";\nimport Container from \"./Component/Container\";\nimport GlobalStyles from \"./Component/GlobalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyles/>\n      <Container className=\"b\" />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}